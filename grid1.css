.container{
  border: 1px solid blue;
  padding: 10px;
  /* grid is displayed only if we add value to it, such as "grid-template" */
  display: grid;
  /* grid-template-columns: 100px 200px 300px;
  grid-template-rows: 100px 200px 300px; */
  /* "grid-template" will sync column and rows together; 2D
  if we want to keep the ratio when we minimize the page, we will give % values to the rows/columns */
  grid-template: 100px 200px 300px / repeat(3,1fr);
  auto-fill and auto-fit allows us to minimize the page,but keep our boxe's dimensions.
  /* fr is a flexible unit that allows us to define usable space, equal and responsive colums. */
  /* grid-gap: 10px; */
}

.box{
  background-color: orange;
  border: 1px solid blue;
}

.box7{
  order: -1;
}

.box1{
  /* defining the place of the box between the lines (row start 2:count 2 lines;
  row end 3:count 3 lines; same as for the column properties) */
  /* grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2;
  grid-column-end: 3; */
  /* you can write this code in 3 ays; 1 was above, 2 is below */
  /* grid-row: row start value / row end value;
  grid-column: column start value / column end value;
  grid-row:2/3;
  grid-column:2/3; */
  /* 3 is below */
  /* grid-area: row start value/column start value/row end value/column end value; */
  /* grid-area: 2/2/3/3; */
}

/* explicit grid: the layout that we wrote for the grid (columns and rows are defined in the code)
   implicit grid: automatically created for tracks other than the red ones??? */

.box4{
  grid-area: 2/1/3/3;
}

.box8{
  grid-area: 2/3/4/4;
}
